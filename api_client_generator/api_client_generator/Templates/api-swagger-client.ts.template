import { Injectable } from '@angular/core';
import { PayrollFormModel, PayrollDetailFormModel } from '../../_shared/models/api-dto';
import { Observable } from 'rxjs';
import { HttpClient } from '@angular/common/http';
import { ConfigurationProvider } from '../provider/configuration.provider';
import { timeout, retry, map } from 'rxjs/operators';

@Injectable({
  providedIn: 'root'
})
export class ApiClient {

  private baseUrl: string;
  private timeout: number;

  constructor(
    private http: HttpClient,
    private configProvider: ConfigurationProvider,
  ) {
    this.baseUrl = this.configProvider.configuration == null ? '' : this.configProvider.configuration.Api.Url;
    this.timeout = this.configProvider.configuration == null ? 0 : this.configProvider.configuration.HttpClientTimeOut;
  }

  private get<T>(route: string): Observable<T> {
    return this.http
      .get<T>(`${this.baseUrl}/${route}`, {
        observe: 'response',
      })
      .pipe(
        timeout(this.timeout),
        retry(3),
        map(response => !!response.ok ? response.body : null)
      );
  }

  {{#each areas}}
  public {{name}} = {{pascal name}}Area;
  {{/each}}
};

{{#each areas}}
public {{name}} = {
{{#each controllers}}
{{name}}: {
    {{#each actions}}
    {{name}}: ({{#each params}}{{name}}{{#if isOptional}}?{{/if}}: {{type}}{{#unless @last}}, {{/unless}}{{/each}}) => this.{{verb}}<{{returnType}}>(`{{route}}`),
    {{/each}}
},
{{/each}}
};
{{/each}}
